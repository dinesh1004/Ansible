- name : functions
  hosts : native
  connection: local
  vars:
    skills: Devops,Linux,Shell-scripting,Ansible,terraform
    list :
    - key : course1
      value : Devops
    - key : course2
      value : Linux
    - key : course 3
      value : shell-scripting
    
   #Dictionary == map 
    tags : 
      application : payment
      environment : Dev
    
    name : Dinesh Velpula
    email : VELPULADINESH888@GMAIL.COM
    ipaddress : 3222.132.60.50

  # using default function

  tasks : 
  - name : default function
    ansible.builtin.debug:
      msg : "name is :{{name | default ('Ramesh')}}"  

  # converting the string in to list using split function

  - name : split function
    ansible.builtin.debug:
      msg : " skills are :{{skills | split(',')}}"  

  # convert map to list
  - name : converting dictionary to list 
    ansible.builtin.debug:
      msg : "tags are :{{tags | dict2items}}"

# convert list to Dictionat/map

  - name : converting list to map/dictionary 
    ansible.builtin.debug:
      msg : "list  is :{{list | items2dict}}"
  
# read yaml in take it into vatiable

  - name : read yaml and take it into variable
    ansible.builtin.set_fact:
      student_yaml: "{{ lookup ('file' , 'student.yaml') | from_yaml }}"

# convert to json
  - name : converting to json
    ansible.builtin.debug:
      msg : "{{student_yaml | to_json}}"
# copyin to another file 
  - name : copying to new file 
    ansible.builtin.copy:
      dest : ./student_data.jason
      content : "{{ student_yaml | to_nice_json }}"

# convert to uppercase

  - name: convert uppercase
    ansible.builtin.debug:
      msg: "{{ name | upper }}"

# convert to lowercase
  
  - name: convert lovercase 
    ansible.builtin.debug:
      msg: "{{ email | lower }}"
    
# check for IP address validation

  - name: check IP is valid or not
    ansible.builtin.debug: 
      msg: "{{ ipaddress | ansible.utils.ipv4 }}"

  - name: grep for root
    #ansible.builtin.command: cat /etc/passwd | grep root
    ansible.builtin.shell: cat /etc/passwd | grep root
    register: command_output
  - name : printing the command_output
    ansible.builtin.debug:
      msg : "{{command_output}}"


      
    
